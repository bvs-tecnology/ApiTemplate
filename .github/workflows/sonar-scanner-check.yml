name: SonarQube scan check

on:
  pull_request:
    branches:
      - development
      - main

jobs:  
  sonar:
    runs-on:
      - self-hosted
      - windows

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
          
      - name: Setup SonarScanner
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Setup .Net Coverage
        run: dotnet tool install --global dotnet-coverage
        
      - name: SonarQube Scan
        shell: cmd
        run: |
          set PATH=%PATH%;%USERPROFILE%\.dotnet\tools
          
          dotnet sonarscanner begin ^
            /k:"${{ vars.SONAR_API_KEY }}" ^
            /d:sonar.host.url="${{ vars.SONAR_HOST_URL }}" ^
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" ^
            /d:sonar.cs.vscoveragexml.reportsPaths="coverage.xml"
          
          dotnet build --no-incremental
          dotnet-coverage collect "dotnet test" -f xml -o "coverage.xml"
          
          dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
        
      - name: SonarQube Quality Gate check
        shell: cmd
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
        run: |
          rem === Lê o ceTaskId do arquivo report-task.txt ===
          for /f "tokens=1,2 delims==" %%a in (.sonarqube\out\.sonar\report-task.txt) do (
            if "%%a"=="ceTaskId" set CE_TASK_ID=%%b
          )

          echo SonarQube ceTaskId: %CE_TASK_ID%

          rem === Tenta obter analysisId até 10 vezes ===
          set RETRIES=0
          set ANALYSIS_ID=

          :WAIT_LOOP
          curl -s -u %SONAR_TOKEN%: %SONAR_HOST_URL%/api/ce/task?id=%CE_TASK_ID% > ce_task.json

          for /f "tokens=2 delims=:, " %%a in ('type ce_task.json ^| findstr /i "analysisId"') do set ANALYSIS_ID=%%~a
          set ANALYSIS_ID=%ANALYSIS_ID:"=%

          if not defined ANALYSIS_ID (
            set /a RETRIES+=1
            if %RETRIES% GEQ 10 (
              echo ERROR: analysisId não disponível após %RETRIES% tentativas.
              type ce_task.json
              exit /b 1
            )
            echo AnalysisId ainda não disponível... aguardando 5 segundos
            timeout /t 5 >nul
            goto WAIT_LOOP
          )

          echo SonarQube analysisId: %ANALYSIS_ID%

          rem === Consulta status do Quality Gate ===
          curl -s -u %SONAR_TOKEN%: %SONAR_HOST_URL%/api/qualitygates/project_status?analysisId=%ANALYSIS_ID% > qg.json

          for /f "tokens=2 delims=:, " %%a in ('type qg.json ^| findstr /i "status"') do set STATUS=%%~a
          set STATUS=%STATUS:"=%

          echo Quality Gate status: %STATUS%

          if /i not "%STATUS%"=="OK" (
            echo Quality Gate failed!
            type qg.json
            exit /b 1
          ) else (
            echo Quality Gate passed!
          )